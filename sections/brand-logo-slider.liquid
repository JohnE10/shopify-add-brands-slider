<style>
  .parent {
    display: flex;
    overflow: hidden;
    width: 100%;
    align-items: center;
    background-color: var(--parent-background-color, transparent);
    height: var(--parent-height, 100px);
  }

  .scrolling-div {
    width: fit-content;
    height: auto;
    background-color: transparent;
    display: flex;
    align-items: center;
    animation: var(--scroll-animation);
  }

  .scrolling-div img {
    margin: 0 var(--image-gap);
  }

  @keyframes scroll {
    from {
      transform: translateX(0);
    }

    to {
      transform: translateX(-100%);

    }
  }
</style>

{% comment %} <div class="parent" style='background-color: {{ section.settings.background }}; height: {{ section.settings.height }}px;'> {% endcomment %}
  <div class="parent">
  <div class="scrolling-div"></div>
</div>

<script>
  // Sample array of image URLs
  const imagesArray = [];
</script>

{% for block in section.blocks %}
  <script>
      // Get the image URL from Liquid and push it to the JavaScript array
      imagesArray.push("{{ block.settings.image | image_url: width: 150 }}");
  </script>
{% endfor %}

<script>
  
  const imageWidth = 150;
  const numberOfImages = imagesArray.length;
  const scrollingDiv = document.querySelector('.scrolling-div');
  const parentDiv = document.querySelector('.parent');
  
  // Set animation speed
  const speed = {{ section.settings.speed }};
  const animation = `scroll ${speed}s linear infinite`;
  document.documentElement.style.setProperty('--scroll-animation', animation);
  
  // set image gap
  const imageGap = '{{ section.settings.gap }}';
  document.documentElement.style.setProperty('--image-gap', `${imageGap}px`);
  
  // Set parent background color and height
  const backgroundColor = '{{ section.settings.background }}';
  const height = '{{ section.settings.height }}';
  document.documentElement.style.setProperty('--parent-background-color', backgroundColor);
  document.documentElement.style.setProperty('--parent-height', `${height}px`);
  
  // slider function
  function runSlider() {
  
    const screenWidth = screen.width;
    const totalWidth = (imageWidth + 2 * imageGap) * numberOfImages;
    const actualNumberOfDivsNeeded = Math.floor(screenWidth / totalWidth) + 1;
  
    console.log({ imageGap });
    console.log({ totalWidth });
  
    addImages();
  
    // Function to add images to the scrolling div
    function addImages() {
      console.log('addImages ran');
      console.log('actual number of divs needed:', actualNumberOfDivsNeeded);
      for (i = 0; i < actualNumberOfDivsNeeded; i++) {
        imagesArray.forEach((imageUrl, index) => {
          const imgElement = document.createElement('img');
          imgElement.src = imageUrl;
          imgElement.alt = `Image ${index + 1}`;
          // imgElement.style.margin = `0 ${imageGap}px`;
          imgElement.classList.add('image'); // Add class for styling
  
          scrollingDiv.appendChild(imgElement);
        });
      }
      // duplicate scrolling divs
      const clone = scrollingDiv.cloneNode(true);
      parentDiv.appendChild(clone);
    }
  }
  
  // Initial call to set the viewport width on page load
  runSlider();
</script>

{% schema %}
  {
    "name": "Brand Logo Slider",
    "settings": [
      {
        "type": "color",
        "id": "background",
        "label": "Background",
        "default": "transparent"
      }, {
        "type": "number",
        "id": "height",
        "label": "Slider Height",
        "default": 100
      }, {
        "type": "range",
        "id": "gap",
        "label": "Gap Between Images",
        "min": 0,
        "max": 100,
        "step": 10,
        "unit": "px",
        "default": 0
      }, {
        "type": "range",
        "id": "speed",
        "label": "Slider Speed",
        "min": 0,
        "max": 50,
        "unit": "s",
        "step": 5,
        "default": 0
      }

    ],
    "blocks": [
      {
        "type": "logo",
        "name": "Logo",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Logo Image"
          }, {
            "type": "text",
            "id": "alt_text",
            "label": "Alt Text"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Brand Logo Slider",
        "category": "Custom"
      }
    ]
  }
{% endschema %}